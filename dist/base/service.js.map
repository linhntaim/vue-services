{"version":3,"sources":["../../src/base/service.js"],"names":["Service","serviceInstance","basePath","formDataUsed","getInstance","relativePath","used","params","getParams","FormData","appendParams","name","value","appendFormData","appendingParams","forEach","Object","keys","combinedParams","formData","File","Blob","ArrayType","is","v","ObjectType","key","append","response","doneCallback","errorCallback","error","alwaysCallback"],"mappings":"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","sourcesContent":["import {ArrayType, ObjectType} from '@dsquare-gbu/vue-utils'\r\n\r\nexport class Service {\r\n    /**\r\n     *\r\n     * @param {ServiceInstance} serviceInstance\r\n     * @param {string | null} basePath\r\n     */\r\n    constructor(serviceInstance, basePath = null) {\r\n        this.serviceInstance = serviceInstance\r\n        this.basePath = basePath\r\n        this.formDataUsed = false\r\n    }\r\n\r\n    service() {\r\n        return this.serviceInstance.getInstance()\r\n    }\r\n\r\n    path(relativePath = null) {\r\n        return this.basePath ? this.basePath + (relativePath ? '/' + relativePath : '') : relativePath\r\n    }\r\n\r\n    useFormData(used = true) {\r\n        this.formDataUsed = used\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {FormData|Object} params\r\n     * @returns {FormData|Object}\r\n     */\r\n    params(params) {\r\n        params = this.serviceInstance.getParams(params)\r\n        if (this.formDataUsed && !(params instanceof FormData)) {\r\n            params = this.appendParams(new FormData, params)\r\n        }\r\n        this.formDataUsed = false\r\n        return params\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {FormData|Object} params\r\n     * @param {String} name\r\n     * @param {*} value\r\n     * @returns {FormData}\r\n     */\r\n    appendParam(params, name, value) {\r\n        if (params instanceof FormData) {\r\n            this.appendFormData(params, name, value)\r\n        } else {\r\n            params[name] = value\r\n        }\r\n        return params\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {FormData|Object} params\r\n     * @param {FormData|Object} appendingParams\r\n     * @returns {FormData|Object}\r\n     */\r\n    appendParams(params, appendingParams) {\r\n        if (params instanceof FormData) {\r\n            if (appendingParams instanceof FormData) {\r\n                appendingParams.forEach((value, name) => {\r\n                    this.appendFormData(params, name, value)\r\n                })\r\n                return params\r\n            }\r\n            Object.keys(appendingParams).forEach(name => {\r\n                this.appendFormData(params, name, appendingParams[name])\r\n            })\r\n            return params\r\n        }\r\n\r\n        if (appendingParams instanceof FormData) {\r\n            const combinedParams = new FormData\r\n            Object.keys(params).forEach(name => {\r\n                this.appendFormData(combinedParams, name, params[name])\r\n            })\r\n            appendingParams.forEach((value, name) => {\r\n                this.appendFormData(combinedParams, name, value)\r\n            })\r\n            return combinedParams\r\n        }\r\n\r\n        Object.keys(appendingParams).forEach(name => {\r\n            params[name] = appendingParams[name]\r\n        })\r\n        return params\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {FormData} formData\r\n     * @param {String} name\r\n     * @param {*} value\r\n     * @returns {FormData}\r\n     */\r\n    appendFormData(formData, name, value) {\r\n        if (!(value instanceof File || value instanceof Blob)) {\r\n            if (ArrayType.is(value)) {\r\n                value.forEach(v => {\r\n                    this.appendFormData(formData, name + '[]', v)\r\n                })\r\n                return formData\r\n            }\r\n            if (ObjectType.is(value)) {\r\n                Object.keys(value).forEach(key => {\r\n                    this.appendFormData(formData, name + '[' + key + ']', value[key])\r\n                })\r\n                return formData\r\n            }\r\n        }\r\n        formData.append(name, value)\r\n        return formData\r\n    }\r\n\r\n    done(response, doneCallback = null, errorCallback = null) {\r\n        doneCallback && doneCallback(response, errorCallback)\r\n    }\r\n\r\n    error(error, errorCallback = null) {\r\n        errorCallback && errorCallback(error)\r\n    }\r\n\r\n    always(alwaysCallback = null) {\r\n        alwaysCallback && alwaysCallback()\r\n    }\r\n\r\n    request() {\r\n        return null\r\n    }\r\n\r\n    get() {\r\n        return null\r\n    }\r\n\r\n    post() {\r\n        return null\r\n    }\r\n\r\n    put() {\r\n        return null\r\n    }\r\n\r\n    delete() {\r\n        return null\r\n    }\r\n}\r\n"],"file":"service.js"}